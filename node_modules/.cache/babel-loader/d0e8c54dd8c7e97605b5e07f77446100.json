{"ast":null,"code":"var _jsxFileName = \"/home/taiwo/react/Catalogue-Recipe/src/containers/RecipesList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchRecipes, changeFilter } from '../actions';\nimport { URL } from '../constants';\nimport { getRecipeByFilter } from '../redux/selectors';\nimport CategoryFilter from './CategoryFilter';\nimport Recipe from '../components/Recipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipesList = ({\n  recipeData,\n  fetchRecipes,\n  changeFilter\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchRecipes(URL.RECIPES);\n  }, [fetchRecipes]);\n\n  const handleFilterChange = filter => {\n    changeFilter(filter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipes Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoryFilter, {\n        handleFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-wrap\",\n      children: [recipeData.loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"info\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this), recipeData.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"info\",\n        children: recipeData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this), recipeData && recipeData.recipes && recipeData.recipes.length ? recipeData.recipes.map(recipe => /*#__PURE__*/_jsxDEV(Recipe, {\n        recipe: recipe\n      }, recipe.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 50\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"info\",\n        children: \"No Recipes for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipesList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RecipesList;\nRecipesList.propTypes = {\n  recipeData: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  fetchRecipes: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  const {\n    filter\n  } = state;\n  const recipeData = getRecipeByFilter(state, filter);\n  return {\n    recipeData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchRecipes,\n  changeFilter\n})(RecipesList);\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesList\");","map":{"version":3,"sources":["/home/taiwo/react/Catalogue-Recipe/src/containers/RecipesList.js"],"names":["React","useEffect","PropTypes","connect","fetchRecipes","changeFilter","URL","getRecipeByFilter","CategoryFilter","Recipe","RecipesList","recipeData","RECIPES","handleFilterChange","filter","loading","error","recipes","length","map","recipe","idMeal","propTypes","oneOfType","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,YAA3C;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcP,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,KAAgD;AAAA;;AAClEJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACE,GAAG,CAACM,OAAL,CAAZ;AACD,GAFQ,EAEN,CAACR,YAAD,CAFM,CAAT;;AAIA,QAAMS,kBAAkB,GAAIC,MAAD,IAAY;AACrCT,IAAAA,YAAY,CAACS,MAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,kBAAkB,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACGF,UAAU,CAACI,OAAX,iBAAsB;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADzB,EAEGJ,UAAU,CAACK,KAAX,iBAAoB;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBAAsBL,UAAU,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFvB,EAIIL,UAAU,IAAIA,UAAU,CAACM,OAAzB,IAAoCN,UAAU,CAACM,OAAX,CAAmBC,MAAvD,GACIP,UAAU,CAACM,OAAX,CAAmBE,GAAnB,CAAwBC,MAAD,iBAAY,QAAC,MAAD;AAA4B,QAAA,MAAM,EAAEA;AAApC,SAAaA,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA,cAAnC,CADJ,gBAEI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMX,W;;KAAAA,W;AA6BNA,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,UAAU,EAAET,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,MAAX,CAApB,EAAwCC,UAD9B;AAEtBrB,EAAAA,YAAY,EAAEF,SAAS,CAACwB,IAAV,CAAeD,UAFP;AAGtBpB,EAAAA,YAAY,EAAEH,SAAS,CAACwB,IAAV,CAAeD;AAHP,CAAxB;;AAMA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEd,IAAAA;AAAF,MAAac,KAAnB;AACA,QAAMjB,UAAU,GAAGJ,iBAAiB,CAACqB,KAAD,EAAQd,MAAR,CAApC;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeR,OAAO,CACpBwB,eADoB,EAEpB;AAAEvB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAFoB,CAAP,CAGbK,WAHa,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchRecipes, changeFilter } from '../actions';\nimport { URL } from '../constants';\n\nimport { getRecipeByFilter } from '../redux/selectors';\nimport CategoryFilter from './CategoryFilter';\nimport Recipe from '../components/Recipe';\n\nconst RecipesList = ({ recipeData, fetchRecipes, changeFilter }) => {\n  useEffect(() => {\n    fetchRecipes(URL.RECIPES);\n  }, [fetchRecipes]);\n\n  const handleFilterChange = (filter) => {\n    changeFilter(filter);\n  };\n\n  return (\n    <div className=\"small-container\">\n      <div className=\"row row-2\">\n        <h2>Recipes Categories</h2>\n        <CategoryFilter handleFilterChange={handleFilterChange} />\n      </div>\n      <div className=\"row-wrap\">\n        {recipeData.loading && <h2 className=\"info\">Loading</h2>}\n        {recipeData.error && <h2 className=\"info\">{recipeData.error}</h2>}\n        {\n          recipeData && recipeData.recipes && recipeData.recipes.length\n            ? recipeData.recipes.map((recipe) => <Recipe key={recipe.idMeal} recipe={recipe} />) : (\n              <h2 className=\"info\">No Recipes for this category.</h2>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nRecipesList.propTypes = {\n  recipeData: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  fetchRecipes: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { filter } = state;\n  const recipeData = getRecipeByFilter(state, filter);\n  return { recipeData };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchRecipes, changeFilter },\n)(RecipesList);\n"]},"metadata":{},"sourceType":"module"}