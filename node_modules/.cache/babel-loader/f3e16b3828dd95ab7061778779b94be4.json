{"ast":null,"code":"import 'cross-fetch/polyfill';\nimport { FETCH_RECIPES_REQUEST, FETCH_RECIPES_SUCCESS, FETCH_RECIPES_FAILURE, FETCH_CATEGORIES_REQUEST, FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAILURE, CHANGE_FILTER } from './actionsType';\nexport const fetchRecipesRequest = () => ({\n  type: FETCH_RECIPES_REQUEST\n});\nexport const fetchRecipesSuccess = recipes => ({\n  type: FETCH_RECIPES_SUCCESS,\n  payload: recipes\n});\nexport const fetchRecipesFailure = error => ({\n  type: FETCH_RECIPES_FAILURE,\n  payload: error\n});\nexport const fetchCategoriesRequest = () => ({\n  type: FETCH_CATEGORIES_REQUEST\n});\nexport const fetchCategoriesSuccess = recipes => ({\n  type: FETCH_CATEGORIES_SUCCESS,\n  payload: recipes\n});\nexport const fetchCategoriesFailure = error => ({\n  type: FETCH_CATEGORIES_FAILURE,\n  payload: error\n});\nexport const changeFilter = filter => ({\n  type: CHANGE_FILTER,\n  payload: {\n    filter\n  }\n});\nexport const fetchRecipes = url => dispatch => {\n  dispatch(fetchRecipesRequest);\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error('Error - 404 not found');\n    }\n\n    return response.json();\n  }).then(data => {\n    dispatch(fetchRecipesSuccess(data.meals));\n  }).catch(error => {\n    dispatch(fetchRecipesFailure(error));\n  });\n};\nexport const fetchCategories = url => dispatch => {\n  dispatch(fetchCategoriesRequest);\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error('Error - 404 not found');\n    }\n\n    return response.json();\n  }).then(data => {\n    dispatch(fetchCategoriesSuccess(data.categories));\n  }).catch(error => {\n    dispatch(fetchCategoriesFailure(error));\n  });\n};","map":{"version":3,"sources":["/home/taiwo/react/Catalogue-Recipe/src/actions/index.js"],"names":["FETCH_RECIPES_REQUEST","FETCH_RECIPES_SUCCESS","FETCH_RECIPES_FAILURE","FETCH_CATEGORIES_REQUEST","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_FAILURE","CHANGE_FILTER","fetchRecipesRequest","type","fetchRecipesSuccess","recipes","payload","fetchRecipesFailure","error","fetchCategoriesRequest","fetchCategoriesSuccess","fetchCategoriesFailure","changeFilter","filter","fetchRecipes","url","dispatch","fetch","then","response","ok","Error","json","data","meals","catch","fetchCategories","categories"],"mappings":"AAAA,OAAO,sBAAP;AACA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,wBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,aAPF,QAQO,eARP;AAUA,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAER;AADkC,CAAP,CAA5B;AAIP,OAAO,MAAMS,mBAAmB,GAAIC,OAAD,KAAc;AAC/CF,EAAAA,IAAI,EAAEP,qBADyC;AAE/CU,EAAAA,OAAO,EAAED;AAFsC,CAAd,CAA5B;AAKP,OAAO,MAAME,mBAAmB,GAAIC,KAAD,KAAY;AAC7CL,EAAAA,IAAI,EAAEN,qBADuC;AAE7CS,EAAAA,OAAO,EAAEE;AAFoC,CAAZ,CAA5B;AAKP,OAAO,MAAMC,sBAAsB,GAAG,OAAO;AAC3CN,EAAAA,IAAI,EAAEL;AADqC,CAAP,CAA/B;AAIP,OAAO,MAAMY,sBAAsB,GAAIL,OAAD,KAAc;AAClDF,EAAAA,IAAI,EAAEJ,wBAD4C;AAElDO,EAAAA,OAAO,EAAED;AAFyC,CAAd,CAA/B;AAKP,OAAO,MAAMM,sBAAsB,GAAIH,KAAD,KAAY;AAChDL,EAAAA,IAAI,EAAEH,wBAD0C;AAEhDM,EAAAA,OAAO,EAAEE;AAFuC,CAAZ,CAA/B;AAKP,OAAO,MAAMI,YAAY,GAAIC,MAAD,KAAa;AACvCV,EAAAA,IAAI,EAAEF,aADiC;AAEvCK,EAAAA,OAAO,EAAE;AACPO,IAAAA;AADO;AAF8B,CAAb,CAArB;AAOP,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAUC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACd,mBAAD,CAAR;AACA,SAAOe,KAAK,CAACF,GAAD,CAAL,CACJG,IADI,CACEC,QAAD,IAAc;AAClB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,GANI,EAOJJ,IAPI,CAOEK,IAAD,IAAU;AACdP,IAAAA,QAAQ,CAACZ,mBAAmB,CAACmB,IAAI,CAACC,KAAN,CAApB,CAAR;AACD,GATI,EAUJC,KAVI,CAUGjB,KAAD,IAAW;AAChBQ,IAAAA,QAAQ,CAACT,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,GAZI,CAAP;AAaD,CAfM;AAiBP,OAAO,MAAMkB,eAAe,GAAIX,GAAD,IAAUC,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAACP,sBAAD,CAAR;AACA,SAAOQ,KAAK,CAACF,GAAD,CAAL,CACJG,IADI,CACEC,QAAD,IAAc;AAClB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,GANI,EAOJJ,IAPI,CAOEK,IAAD,IAAU;AACdP,IAAAA,QAAQ,CAACN,sBAAsB,CAACa,IAAI,CAACI,UAAN,CAAvB,CAAR;AACD,GATI,EAUJF,KAVI,CAUGjB,KAAD,IAAW;AAChBQ,IAAAA,QAAQ,CAACL,sBAAsB,CAACH,KAAD,CAAvB,CAAR;AACD,GAZI,CAAP;AAaD,CAfM","sourcesContent":["import 'cross-fetch/polyfill';\nimport {\n  FETCH_RECIPES_REQUEST,\n  FETCH_RECIPES_SUCCESS,\n  FETCH_RECIPES_FAILURE,\n  FETCH_CATEGORIES_REQUEST,\n  FETCH_CATEGORIES_SUCCESS,\n  FETCH_CATEGORIES_FAILURE,\n  CHANGE_FILTER,\n} from './actionsType';\n\nexport const fetchRecipesRequest = () => ({\n  type: FETCH_RECIPES_REQUEST,\n});\n\nexport const fetchRecipesSuccess = (recipes) => ({\n  type: FETCH_RECIPES_SUCCESS,\n  payload: recipes,\n});\n\nexport const fetchRecipesFailure = (error) => ({\n  type: FETCH_RECIPES_FAILURE,\n  payload: error,\n});\n\nexport const fetchCategoriesRequest = () => ({\n  type: FETCH_CATEGORIES_REQUEST,\n});\n\nexport const fetchCategoriesSuccess = (recipes) => ({\n  type: FETCH_CATEGORIES_SUCCESS,\n  payload: recipes,\n});\n\nexport const fetchCategoriesFailure = (error) => ({\n  type: FETCH_CATEGORIES_FAILURE,\n  payload: error,\n});\n\nexport const changeFilter = (filter) => ({\n  type: CHANGE_FILTER,\n  payload: {\n    filter,\n  },\n});\n\nexport const fetchRecipes = (url) => (dispatch) => {\n  dispatch(fetchRecipesRequest);\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Error - 404 not found');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      dispatch(fetchRecipesSuccess(data.meals));\n    })\n    .catch((error) => {\n      dispatch(fetchRecipesFailure(error));\n    });\n};\n\nexport const fetchCategories = (url) => (dispatch) => {\n  dispatch(fetchCategoriesRequest);\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Error - 404 not found');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      dispatch(fetchCategoriesSuccess(data.categories));\n    })\n    .catch((error) => {\n      dispatch(fetchCategoriesFailure(error));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}