{"ast":null,"code":"var _jsxFileName = \"/home/taiwo/react/Catalogue-Recipe/src/containers/CategoryFilter.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCategories } from '../actions';\nimport { getCategoriesList } from '../redux/selectors';\nimport { CATEGORY_FILTERS, URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryFilter = ({\n  filter,\n  categoriesData,\n  fetchCategories,\n  handleFilterChange\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchCategories(URL.CATEGORIES);\n  }, [fetchCategories]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [categoriesData.loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 34\n    }, this), categoriesData.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: categoriesData.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select\",\n      value: filter,\n      onChange: e => {\n        handleFilterChange(e.target.value);\n      },\n      id: \"category\",\n      name: \"category\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"All\"\n      }, Math.floor(Math.random() * 10000), false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), categoriesData.categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.strCategory,\n        children: category.strCategory\n      }, category.idCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CategoryFilter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CategoryFilter;\nCategoryFilter.propTypes = {\n  filter: PropTypes.string,\n  categoriesData: PropTypes.instanceOf(Object).isRequired,\n  fetchCategories: PropTypes.func.isRequired,\n  handleFilterChange: PropTypes.func.isRequired\n};\nCategoryFilter.defaultProps = {\n  filter: CATEGORY_FILTERS.ALL\n};\n\nconst mapStateToProps = state => {\n  const {\n    filter\n  } = state;\n  const categoriesData = getCategoriesList(state);\n  return {\n    filter,\n    categoriesData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCategories\n})(CategoryFilter);\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"sources":["/home/taiwo/react/Catalogue-Recipe/src/containers/CategoryFilter.js"],"names":["React","useEffect","PropTypes","connect","fetchCategories","getCategoriesList","CATEGORY_FILTERS","URL","CategoryFilter","filter","categoriesData","handleFilterChange","CATEGORIES","loading","error","e","target","value","Math","floor","random","categories","map","category","strCategory","idCategory","propTypes","string","instanceOf","Object","isRequired","func","defaultProps","ALL","mapStateToProps","state"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,gBAAT,EAA2BC,GAA3B,QAAsC,cAAtC;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,MADsB;AACdC,EAAAA,cADc;AACEN,EAAAA,eADF;AACmBO,EAAAA;AADnB,CAAD,KAEjB;AAAA;;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,eAAe,CAACG,GAAG,CAACK,UAAL,CAAf;AACD,GAFQ,EAEN,CAACR,eAAD,CAFM,CAAT;AAIA,sBACE;AAAA,eACGM,cAAc,CAACG,OAAf,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,EAEGH,cAAc,CAACI,KAAf,iBAAwB;AAAA,gBAAKJ,cAAc,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,YAF3B,eAII;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,KAAK,EAAEL,MAAlC;AAA0C,MAAA,QAAQ,EAAGM,CAAD,IAAO;AAAEJ,QAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAqC,OAAlG;AAAoG,MAAA,EAAE,EAAC,UAAvG;AAAkH,MAAA,IAAI,EAAC,UAAvH;AAAkI,MAAA,QAAQ,MAA1I;AAAA,8BACE;AAAgD,QAAA,KAAK,EAAC,KAAtD;AAAA;AAAA,SAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAb;AAAA;AAAA;AAAA;AAAA,cADF,EAIGV,cAAc,CAACW,UAAf,CAA0BC,GAA1B,CAA+BC,QAAD,iBAC7B;AAAkC,QAAA,KAAK,EAAEA,QAAQ,CAACC,WAAlD;AAAA,kBACGD,QAAQ,CAACC;AADZ,SAAaD,QAAQ,CAACE,UAAtB;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADF;AAkBD,CAzBD;;GAAMjB,c;;KAAAA,c;AA2BNA,cAAc,CAACkB,SAAf,GAA2B;AACzBjB,EAAAA,MAAM,EAAEP,SAAS,CAACyB,MADO;AAEzBjB,EAAAA,cAAc,EAAER,SAAS,CAAC0B,UAAV,CAAqBC,MAArB,EAA6BC,UAFpB;AAGzB1B,EAAAA,eAAe,EAAEF,SAAS,CAAC6B,IAAV,CAAeD,UAHP;AAIzBnB,EAAAA,kBAAkB,EAAET,SAAS,CAAC6B,IAAV,CAAeD;AAJV,CAA3B;AAOAtB,cAAc,CAACwB,YAAf,GAA8B;AAC5BvB,EAAAA,MAAM,EAAEH,gBAAgB,CAAC2B;AADG,CAA9B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAE1B,IAAAA;AAAF,MAAa0B,KAAnB;AACA,QAAMzB,cAAc,GAAGL,iBAAiB,CAAC8B,KAAD,CAAxC;AACA,SAAO;AAAE1B,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACD,CAJD;;AAMA,eAAeP,OAAO,CACpB+B,eADoB,EAEpB;AAAE9B,EAAAA;AAAF,CAFoB,CAAP,CAGbI,cAHa,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCategories } from '../actions';\nimport { getCategoriesList } from '../redux/selectors';\nimport { CATEGORY_FILTERS, URL } from '../constants';\n\nconst CategoryFilter = ({\n  filter, categoriesData, fetchCategories, handleFilterChange,\n}) => {\n  useEffect(() => {\n    fetchCategories(URL.CATEGORIES);\n  }, [fetchCategories]);\n\n  return (\n    <>\n      {categoriesData.loading && <h2>Loading</h2> }\n      {categoriesData.error && <h2>{categoriesData.error}</h2> }\n      {\n        <select className=\"select\" value={filter} onChange={(e) => { handleFilterChange(e.target.value); }} id=\"category\" name=\"category\" required>\n          <option key={Math.floor(Math.random() * 10000)} value=\"All\">\n            All\n          </option>\n          {categoriesData.categories.map((category) => (\n            <option key={category.idCategory} value={category.strCategory}>\n              {category.strCategory}\n            </option>\n          ))}\n        </select>\n      }\n    </>\n  );\n};\n\nCategoryFilter.propTypes = {\n  filter: PropTypes.string,\n  categoriesData: PropTypes.instanceOf(Object).isRequired,\n  fetchCategories: PropTypes.func.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nCategoryFilter.defaultProps = {\n  filter: CATEGORY_FILTERS.ALL,\n};\n\nconst mapStateToProps = (state) => {\n  const { filter } = state;\n  const categoriesData = getCategoriesList(state);\n  return { filter, categoriesData };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchCategories },\n)(CategoryFilter);\n"]},"metadata":{},"sourceType":"module"}